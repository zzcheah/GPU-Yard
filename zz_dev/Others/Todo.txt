=== === === === === === === === === === === === === === === === === === === === === === ===
                                      In Progress
=== === === === === === === === === === === === === === === === === === === === === === ===

MLaaS Logic:
-> prebuild functions/scripts
   3.   upload output zip
   4.   call api to release machine along with remarks


Task Worker:
-> pass main server API urls to the container


Common (java package to be shared) :
-> constants for collection names and other repetitive strings. dd-MM-yyyy HH:mm:ss

Additional:
-> notify user when finish processing
-> how task workers know the address of main server




=== === === === === === === === === === === === === === === === === === === === === === ===
                                      COMPLETED
=== === === === === === === === === === === === === === === === === === === === === === ===

Common:
-> optimize to reduce redundancy and improve consistency
-> some collection constants added


Task Worker:
-> docker client is now a bean instead of serving as a whole service
-> Rest controller and service adjustments
-> API to receive requestID
-> retrieve docker image and encoded json param from request



MLaaS logic:
-> simple MLaaS logic (binary classifier)
-> prebuild functions/scripts (2 more to go)
   1.   download input zip and extract the files
   2.   decode json param
-> build model from extracted files and input params
